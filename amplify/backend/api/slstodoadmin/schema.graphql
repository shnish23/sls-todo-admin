input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
}

type Result @aws_iam {
  count: Int!
}

input CreateTodoInput {
  id: String!
  text: String!
  checked: String!
  createdAt: String!
  updatedAt: String!
}

type Todo @aws_iam {
  id: String!
  text: String!
  checked: String!
  createdAt: String!
  updatedAt: String!
}

input UpdateTodoInput {
  id: String!
  text: String
  checked: String
  createdAt: String
  updatedAt: String
}

type Mutation {
  deleteTodo(id: String!): Result @aws_iam
  createTodo(createTodoInput: CreateTodoInput!): Todo @aws_iam
  updateTodo(updateTodoInput: UpdateTodoInput!): Todo @aws_iam
}

type Query {
  getTodo(id: String!): Todo
  listTodos: [Todo]
}

type Subscription {
  onCreateTodo: Todo @aws_subscribe(mutations: ["createTodo"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
